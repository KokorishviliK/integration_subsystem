////////////////////////////////////////////////////////////////////////////////

// инт_ПотокиДанных

//  

////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Сформировать сообщение по потоку
//
// Параметры:
//  ИсходныеДанные     -    ОпределяемыйТип.инт_ИсходныеДанные   -   Ссылка на объект от которого будет сформировано сообщение
//  ПотокДанных        -    СправочникСсылка.инт_ПотокиДанных    - 
// 
// Возвращаемое значение:
//  Соответствие - Подготовленное для сериализации соответствие.
//
Функция СформироватьСообщениеПоПотоку(ИсходныеДанные, ПотокДанных) Экспорт
    
    СформированноеСообщение = Новый Соответствие;
    
    Код = ПотокДанных.ТекстОбработчика;
    // Начало замера времени выполнения --------------------------------------------------------------------------------- {
    // TODO: Добавить сохранение времени формирования для отправки в монторинг
    //НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
    
    Попытка
        СформированноеСообщение = Исполнить(ПотокДанных.ТекстОбработчика, ИсходныеДанные);
    Исключение
        СообщениеОбОшибке = СтрШаблон("При формировании сообщения по потоку <%1> из исходных данных <%2> возникла ошибка!
        |
        | Информация об ошибке: %3",
        ПотокДанных,
        ИсходныеДанные,
        ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
        
        ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.ПотокиДанных.ФормированиеИсходящегоСообщения",
                                    УровеньЖурналаРегистрации.Ошибка,
                                    Метаданные.НайтиПоТипу(Тип(ИсходныеДанные)),
                                    ИсходныеДанные,
                                    СообщениеОбОшибке);
    КонецПопытки;

    // Конец замера { ---------------------------------------------------------------------------------------------------
    //ВремяВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
    
    Если ПотокДанных.Валидация Тогда
        // TODO: Имплементировать валидацию пакета.	
    КонецЕсли;
    
  	Возврат СформированноеСообщение;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 Функция Исполнить(Код, ИсходныеДанные)

	Результат = Новый Соответствие;

		УстановитьБезопасныйРежим(Истина);
		// BSLLS:ExecuteExternalCodeInCommonModule-off
		Выполнить(Код);
		// BSLLS:ExecuteExternalCodeInCommonModule-on
	    УстановитьБезопасныйРежим(Ложь);

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
