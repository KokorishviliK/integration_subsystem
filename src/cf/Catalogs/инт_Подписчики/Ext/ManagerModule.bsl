////////////////////////////////////////////////////////////////////////////////

// инт_Подписчики

//  

////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция - Сформировать сообщение по подписчику
//
// Параметры:
//  ДанныеСообщения     -   Соответствие   - Соттветствие содержащее данные для сериатизации
//  Подписчик         -  СпраочникСсылка.инт_Подписчики    - ссылка на подписчика.
// 
// Возвращаемое значение:
//  Строка - Сериализованное, котовое к отправке подписчику сообщение
//
Функция СформироватьСообщениеПоПодписчику(ДанныеСообщения, Подписчик) Экспорт
    // В теории тут могут быть манипуляции с сообщением. Сериализация в xml, подсовывание других параметров сериализации(не знаю, форматы дат-там другие и тд) но пока просто в json для mvp/
    
    Возврат инт_КоннекторHTTP.ОбъектВJson(ДанныеСообщения);
КонецФункции

Процедура ОтправитьСообщениеПодписчику(Сообщение) Экспорт
    //Получим поток данных, он будет необходим для отправки
    ДанныеИсходящегоСообщения = РегистрыСведений.инт_ОчередьИсходящихСообщений.ПолучитьДанныеОчередиПоИдентификатору(Сообщение.ИдентификаторСообщения, "ПотокДанных");
    ПотокДанных = ДанныеИсходящегоСообщения.ПотокДанных;
    
    //mvp просто пошлем сообщение по конкретному адресу.
    Подписчик = Сообщение.Подписчик;
    url = СтрШаблон("%1/hs/api/v1/%2/%3", Подписчик.СсылкаНаСервис, ПотокДанных.Код, Сообщение.ИдентификаторСообщения);
    
    Ответ = инт_КоннекторHTTP.Post(url,Сообщение.СформированноеСообщение);
    
    Если НЕ Ответ.КодСостояния = 200 Тогда
    	ВызватьИсключение Строка(Ответ.КодСостояния);
    КонецЕсли;

КонецПроцедуры

// Процедура - Расчитать дату следующей попытки по дате
//
// Параметры:
//  ДатаНачальная         -   Дата   - Дата от которой будет Отсчитываться пауза
//  Подписчик     - СправочникСсылка.инт_Подписчики - подписчик для которого будет делаться расчет
//
Функция РасчитатьДатуСледующейПопыткиПоДате(ДатаНачальная, Подписчик) Экспорт
   Возврат Дата(ДатаНачальная+Подписчик.ПаузаМеждуПопыткамиОбработки);
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
