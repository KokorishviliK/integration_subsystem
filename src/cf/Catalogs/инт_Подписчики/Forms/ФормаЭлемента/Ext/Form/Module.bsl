////////////////////////////////////////////////////////////////////////////////
// инт_Подписчики
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    ОбновитьВидимостьДоступностьЭлементовФормы();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	ПарольИзХранилища = ИТКВ_БСП.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка, "Пароль");
	УстановитьПривилегированныйРежим(Ложь);
	
	Пароль = ?(ЗначениеЗаполнено(ПарольИзХранилища), ЭтотОбъект.УникальныйИдентификатор, "");
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		УстановитьПривилегированныйРежим(Истина);
		ИТКВ_БСП.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль);
		УстановитьПривилегированныйРежим(Ложь);
		Пароль = ?(ЗначениеЗаполнено(Пароль), ЭтотОбъект.УникальныйИдентификатор, "");
		
		ПроверитьОбязательныеПараметрыВСсылкеНаСервис(Отказ);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
  
&НаКлиенте
Процедура ТипПодписчикаПриИзменении(Элемент)
    ОбновитьВидимостьДоступностьЭлементовФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьВидимостьДоступностьЭлементовФормы()
    Элементы.ГруппаПараметрыПроизвольногоHTTP.Видимость = Объект.ТипПодписчика = ПредопределенноеЗначение("Перечисление.инт_ТипыПодписчиков.ПроизвольныйHTTP");
КонецПроцедуры

&НаСервере
Процедура ПроверитьОбязательныеПараметрыВСсылкеНаСервис(Отказ)
	Если Объект.СпособПередачиИдентификатораСообщения = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреПути И СтрНайти(Объект.СсылкаНаСервис, "/{flow_id}")=0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В ссылке на сервис отсутствует требуемый параметр {flow_id}.";
		Сообщение.Поле = "Объект.СсылкаНаСервис";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Объект.СпособПередачиИдентификатораСообщения = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреПути И СтрНайти(Объект.СсылкаНаСервис, "/{message_id}")=0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В ссылке на сервис отсутствует требуемый параметр {message_id}.";
		Сообщение.Поле = "Объект.СсылкаНаСервис";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПостПроцессингОбработчикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДопПараметры = Новый Структура("ТекстОбработчика", Элемент.ТекстРедактирования);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияРедактированияОбработчика", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.инт_Подписчики.Форма.ФормаРедактированияОбработчика",ДопПараметры,Элемент,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияРедактированияОбработчика(ТекстОбработчика, ДополнительныеПараметры) Экспорт
    Если ТекстОбработчика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ПостПроцессинг.ТекущиеДанные.Обработчик = ТекстОбработчика;
КонецПроцедуры

#КонецОбласти
