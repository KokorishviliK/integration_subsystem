////////////////////////////////////////////////////////////////////////////////
// инт_ОбработкаВходящихПотоков
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - Обработка входящего сообщения по потоку
//
// Параметры:
//  Сообщение     - Соответствие,Структура,Строка,Число,Булево - Данные входящего сообщения
//  ПотокДанных     -  СправочникСсылка.инт_ПотокиДанных    - Ссылка на входящий поток данных.
//
Процедура ОбработкаВходящегоСообщенияПоПотоку(Сообщение, ПотокДанных, ИдентификаторСообщения=Неопределено) Экспорт
    Если Не ПотокДанных.НаправлениеПотока = Перечисления.инт_НаправлениеПотокаДанных.Входящий Тогда
        СообщениеОбОшибке = СтрШаблон("При попытке обработки входящего сообщения по потоку <%1> возникла ошибка.
        |Нельзя использовать исходящие потоки для входящих сообщений!",ПотокДанных);
        
        ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.ОбработкаВходящихСообщений", УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
    	ВызватьИсключение СообщениеОбОшибке;
    КонецЕсли;
    
    Если ПотокДанных.АсинхроннаяОбработка Тогда
       РегистрыСведений.инт_ОчередьВходящихСообщений.ЗарегистрироватьСообщение(Сообщение, ПотокДанных, ИдентификаторСообщения);
    Иначе
        // Обработаем сразу же, без отправки в очередь.
       Справочники.инт_ПотокиДанных.ОбработатьВходящееСообщениеПоПотоку(Сообщение, ПотокДанных);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Процедура инт_ОбработкаВходящейОчереди() Экспорт
    РазмерПачки = инт_ОбработкаВходящихПотоковПовтИсп.РазмерПачкиОтправкиСообщений();
    МассивИдентификаторов = РегистрыСведений.инт_ТекущийСтатусВходящихСообщений.ПолучитьИдентификаторыСообщенийКФормированию(РазмерПачки);
    // Пока все однопоточное, потому формировать фоновое задание мы не будем. Потому что я не придумал нормальной схемы параллельной обработки.
    Для Каждого Идентификатор Из МассивИдентификаторов Цикл
    	РегистрыСведений.инт_ОчередьВходящихСообщений.ОбработатьСообщениеПоИдентификатору(Идентификатор);
    КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
