///////////////////////////////////////////////////////////////////////////////
// инт_РаботаССообщениямиПодсистемаИнтеграции
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция - Сформировать сообщение по подписчику
//
// Параметры:
//  ДанныеСообщения     -   Соответствие   - Соттветствие содержащее данные для сериатизации
//  Подписчик         -  СпраочникСсылка.инт_Подписчики    - ссылка на подписчика.
// 
// Возвращаемое значение:
//  Строка - Сериализованное, котовое к отправке подписчику сообщение
//
Функция СформироватьСообщениеПоПодписчику(ДанныеСообщения, Подписчик) Экспорт
    // Пока так. 
    // В теории тут могут быть манипуляции с сообщением. Сериализация в xml, подсовывание других параметров сериализации(не знаю, форматы дат-там другие и тд)
    // но пока просто в json для mvp
    Возврат инт_КоннекторHTTP.ОбъектВJson(ДанныеСообщения);
		
КонецФункции

// Процедура - Отправить сообщение подписчику
//
// Параметры:
//  Сообщение     - Структура - Данные сообщения 
//
Процедура ОтправитьСообщение(Сообщение) Экспорт
	ДанныеИсходящегоСообщения = РегистрыСведений.инт_ОчередьИсходящихСообщений.ПолучитьДанныеОчередиПоИдентификатору(Сообщение.ИдентификаторСообщения, "ПотокДанных, ИдентификаторСообщения, ИсходныеДанные");
	Подписчик = Сообщение.Подписчик;
	
	url = СформироватьURLПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения);
	Заголовки = СформироватьЗаголовкиПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения);
	ПараметрыЗапроса = СформироватьПараметрыЗапросаПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения);
	
	ДополнительныеПараметры = Новый Структура("Заголовки, ПараметрыЗапроса", Заголовки, ПараметрыЗапроса);
	
	Сессия = инт_КоннекторHTTP.СоздатьСессию();
	Если ЗначениеЗаполнено(Подписчик.Пользователь) Тогда
		//Достанем пароль
		УстановитьПривилегированныйРежим(Истина);
		Пароль = ИТКВ_БСП.ПрочитатьДанныеИзБезопасногоХранилища(Подписчик);
		УстановитьПривилегированныйРежим(Ложь);
		Аутентификация = Новый Структура("Пользователь, Пароль", Подписчик.Пользователь, Пароль);
		Сессия.Вставить("Аутентификация", Аутентификация);
	КонецЕсли;
	
	Ответ = инт_КоннекторHTTP.Post(url,Сообщение.СформированноеСообщение,ДополнительныеПараметры,Сессия);
	
	Справочники.инт_Подписчики.ВыполнитьПостОбработку(Подписчик, Ответ, ДанныеИсходящегоСообщения.ИсходныеДанные);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция СформироватьURLПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения)
	url = Подписчик.СсылкаНаСервис;
	Если НЕ ЗначениеЗаполнено(url) Тогда
		ВызватьИсключение СтрШаблон("Не заполнена ссылка на сервис для подписчика <%1>", Подписчик);
	КонецЕсли;
	
	Если Подписчик.СпособПередачиИдентификатораПотока = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреПути Тогда
		url = СтрЗаменить(URL, "{flow_id}",ДанныеИсходящегоСообщения.ПотокДанных.Код);
	КонецЕсли;
	
	Если Подписчик.СпособПередачиИдентификатораСообщения = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреПути Тогда
		url = СтрЗаменить(URL, "{message_id}",ДанныеИсходящегоСообщения.ИдентификаторСообщения);
	КонецЕсли;
	
	Возврат url;
КонецФункции

Функция СформироватьЗаголовкиПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения)
	Заголовки = Новый Соответствие;
	
	Если Подписчик.СпособПередачиИдентификатораПотока = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВЗаголовке Тогда
		Заголовки.Вставить("flow_id",ДанныеИсходящегоСообщения.ПотокДанных.Код);
	КонецЕсли;
	
	Если Подписчик.СпособПередачиИдентификатораСообщения = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВЗаголовке Тогда
		Заголовки.Вставить("message_id",ДанныеИсходящегоСообщения.ИдентификаторСообщения);
	КонецЕсли;
	
	Возврат Заголовки;
	
КонецФункции

 Функция СформироватьПараметрыЗапросаПоДаннымПодписчика(Подписчик, ДанныеИсходящегоСообщения)
	ПараметрыЗапроса = Новый Структура;
	
	Если Подписчик.СпособПередачиИдентификатораПотока = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреЗапроса Тогда
		ПараметрыЗапроса.Вставить("flow_id",ДанныеИсходящегоСообщения.ПотокДанных.Код);
	КонецЕсли;
	
	Если Подписчик.СпособПередачиИдентификатораСообщения = Перечисления.инт_СпособыПередачиПараметровПоHTTP.ВПараметреЗапроса Тогда
		ПараметрыЗапроса.Вставить("message_id",ДанныеИсходящегоСообщения.ИдентификаторСообщения);
	КонецЕсли;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции
#КонецОбласти
