#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.КлючЗаписи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяЗаписьДляФормы = ПолучитьЗаписьРСПоКлючу(Параметры.КлючЗаписи);
	СформированноеСообщениеДЗнач = ФормированиеСообщенияДеревоЗначений(ТекущаяЗаписьДляФормы);

	ЗаписьРСТекущийСтатус = ПолучитьТекущийСтатусПоКлючу(Параметры.КлючЗаписи);

	ЗначениеВРеквизитФормы(ТекущаяЗаписьДляФормы, "Запись");
	ЗначениеВРеквизитФормы(СформированноеСообщениеДЗнач, "СформированноеСообщение");
	ЗначениеВРеквизитФормы(ЗаписьРСТекущийСтатус, "ЗаписьРСТекущийСтатусИсходящих");
	
	СписокОтправка.Параметры.УстановитьЗначениеПараметра("ИдентификаторСообщения",
														 Параметры.ИдентификаторСообщения);
	
КонецПроцедуры
													
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОтправка

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьСтатус(Команда)
			
	ОткрытьФорму("Перечисление.инт_СтатусыИсходящихСообщений.ФормаВыбора",,,,,,
				Новый ОписаниеОповещения("ИзменитьСтатусЗавершение", ЭтотОбъект));
									
КонецПроцедуры
			
&НаКлиенте
Процедура ИсторияСтатусов(Команда)
		
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИдентификаторСообщения", Запись.ИдентификаторСообщения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	
	ОткрытьФорму("РегистрСведений.инт_ИсторияСтатусовИсходящихСообщений.ФормаСписка", ПараметрыФормы, ЭтотОбъект);
		
КонецПроцедуры
			
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьТекущийСтатусПоКлючу(КлючЗаписи)
		
	Запись = РегистрыСведений.инт_ТекущийСтатусИсходящихСообщений.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючЗаписи);
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
		Возврат Запись;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗаписьРСПоКлючу(КлючЗаписи)
		
	Запись = РегистрыСведений.инт_ОчередьИсходящихСообщений.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючЗаписи);
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
		Возврат Запись;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьСтатусНаСервере(Статус, ИдентификаторСообщения, ТекстОшибки)
		
    РегистрыСведений.инт_ТекущийСтатусИсходящихСообщений.ЗаписатьСтатусСообщения(ИдентификаторСообщения, Статус, ТекстОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьСтатусНаСервере(ВыбранныйЭлемент,
							Запись.ИдентификаторСообщения,
							ЗаписьРСТекущийСтатусИсходящих.ТекстОшибки);
										
КонецПроцедуры
						
&НаСервере
Функция ФормированиеСообщенияДеревоЗначений(ТекущаяЗаписьДляФормы)
	
	СформированноеСообщениеСоотв = ТекущаяЗаписьДляФормы.СформированноеСообщение.Получить();
	
	СформированноеСообщениеДЗнач = Новый ДеревоЗначений;
	СформированноеСообщениеДЗнач.Колонки.Добавить("Ключ");
	СформированноеСообщениеДЗнач.Колонки.Добавить("Значение");
	
	ДанныеВДерево(СформированноеСообщениеСоотв, СформированноеСообщениеДЗнач);
	
	Возврат СформированноеСообщениеДЗнач;
	
КонецФункции

&НаСервере
Процедура ДанныеВДерево(Данные, СтрокаДерева)
	
	Если Тип("Соответствие") = ТипЗнч(Данные)
	 ИЛИ Тип("Структура") 	 = ТипЗнч(Данные) Тогда
		ОбработатьОбъект(Данные, СтрокаДерева);
	ИначеЕсли Тип("Массив") = ТипЗнч(Данные) Тогда
        ОбработатьМассив(Данные, СтрокаДерева);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьМассив(Массив, СтрокаДерева)
	
	Для Каждого Элемент Из Массив Цикл
		ПодстрокаДерева		= СтрокаДерева.Строки.Добавить();
		ПодстрокаДерева.Ключ	= ТипЗнч(Элемент);
		Если ЭтоПримитивныйТип(Элемент) Тогда
			ПодстрокаДерева.Значение = Элемент;
		Иначе
			ДанныеВДерево(Элемент, ПодстрокаДерева);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьОбъект(Структура, СтрокаДерева)
	
	Для Каждого Элемент	Из Структура Цикл
		ПодстрокаДерева		= СтрокаДерева.Строки.Добавить();
		ПодстрокаДерева.Ключ	= Элемент.Ключ;
		Если ЭтоПримитивныйТип(Элемент.Значение) Тогда
			ПодстрокаДерева.Значение = Элемент.Значение;
		Иначе
			ДанныеВДерево(Элемент.Значение, ПодстрокаДерева);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЭтоПримитивныйТип(Значение)
	
	Если Тип("Строка") = ТипЗнч(Значение)
	 ИЛИ Тип("Число")  = ТипЗнч(Значение)
	 ИЛИ Тип("Булево") = ТипЗнч(Значение)
	 ИЛИ Тип("Дата")   = ТипЗнч(Значение) Тогда
	 	Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

#КонецОбласти

