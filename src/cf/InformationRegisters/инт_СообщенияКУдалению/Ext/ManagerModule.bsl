////////////////////////////////////////////////////////////////////////////////
// инт_СообщенияКУдалению
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Процедура - Зарегистрировать сообщение к удалению
// Ставит сообщение в очередь удаления.
// Параметры:
//  ИдентификаторСообщения	 - 	УникальныйИдентификатор - ИдентификаторСообщения которое необходимо удалить из очередей.
//  НаправлениеПотока		 - ПеречислениеСсылка.инт_НаправлениеПотокаДанных	 -  Направление потока данных.
//
Процедура ЗарегистрироватьСообщениеКУдалению(ИдентификаторСообщения, НаправлениеПотока) Экспорт
	Если НаправлениеПотока = Перечисления.инт_НаправлениеПотокаДанных.Исходящий Тогда
		Менеджер = РегистрыСведений.инт_ОчередьИсходящихСообщений;
	ИначеЕсли НаправлениеПотока = Перечисления.инт_НаправлениеПотокаДанных.Входящий Тогда
		Менеджер = РегистрыСведений.инт_ОчередьВходящихСообщений;
	Иначе
		ВызватьИсключение "Ошибка при попытке зарегистрировать сообщение к удалению";
	КонецЕсли;
	
	ДанныеОСообщении = Менеджер.ПолучитьДанныеОчередиПоИдентификатору(ИдентификаторСообщения, "ПотокДанных");
	ДнейДоУдаления = ДанныеОСообщении.ПотокДанных.УдалятьОбработанныеСообщенияЧерез;
	
	Если ДнейДоУдаления > 0 Тогда
		Запись = РегистрыСведений.инт_СообщенияКУдалению.СоздатьМенеджерЗаписи();
		Запись.ИдентификаторСообщения = ИдентификаторСообщения;
		Запись.НаправлениеПотока = НаправлениеПотока;
		Запись.ДатаУдаления = ТекущаяДата()+86400*ДнейДоУдаления;
		Запись.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Процедура ОчиститьОчередьИсходящихСообщений() Экспорт
	МассивИдентификаторов = ПолучитьМассивИдентификаторовКУдалению(Перечисления.инт_НаправлениеПотокаДанных.Исходящий);
	
	Для Каждого Идентификатор Из МассивИдентификаторов Цикл
		НачатьТранзакцию();
		Попытка
			РегистрыСведений.инт_ОчередьИсходящихСообщений.УдалитьСообщениеИзОчередиПоИдентификатору(Идентификатор);
			
			Запись = РегистрыСведений.инт_СообщенияКУдалению.СоздатьМенеджерЗаписи();
			Запись.ИдентификаторСообщения = Идентификатор;
			Запись.НаправлениеПотока = Перечисления.инт_НаправлениеПотокаДанных.Исходящий;
			Запись.Удалить();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СообщениеОбОшибке = СтрШаблон("При попытке удаления сообщения с идентификатором <%1> из очереди исходящих, возникла ошибка!
			|
			| Информация об ошибке: %2", Идентификатор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		    ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.СообщенияКУдалению", УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
		КонецПопытки;
			
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьОчередьВходящихСообщений() Экспорт
	МассивИдентификаторов = ПолучитьМассивИдентификаторовКУдалению(Перечисления.инт_НаправлениеПотокаДанных.Входящий);
	
	Для Каждого Идентификатор Из МассивИдентификаторов Цикл
		НачатьТранзакцию();
		Попытка
			РегистрыСведений.инт_ОчередьВходящихСообщений.УдалитьСообщениеИзОчередиПоИдентификатору(Идентификатор);
			
			Запись = РегистрыСведений.инт_СообщенияКУдалению.СоздатьМенеджерЗаписи();
			Запись.ИдентификаторСообщения = Идентификатор;
			Запись.НаправлениеПотока = Перечисления.инт_НаправлениеПотокаДанных.Входящий;
			Запись.Удалить();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СообщениеОбОшибке = СтрШаблон("При попытке удаления сообщения с идентификатором <%1> из очереди входящих, возникла ошибка!
			|
			| Информация об ошибке: %2", Идентификатор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		    ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.СообщенияКУдалению", УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
		КонецПопытки;
			
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьМассивИдентификаторовКУдалению(НаправлениеПотока)

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	инт_СообщенияКУдалению.ИдентификаторСообщения КАК ИдентификаторСообщения
               |ИЗ
               |	РегистрСведений.инт_СообщенияКУдалению КАК инт_СообщенияКУдалению
               |ГДЕ
               |	инт_СообщенияКУдалению.НаправлениеПотока = &НаправлениеПотока
               |	И инт_СообщенияКУдалению.ДатаУдаления <= &ТекущаяДата";
Запрос.УстановитьПараметр("НаправлениеПотока",НаправлениеПотока);
Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИдентификаторСообщения");
КонецФункции

#КонецОбласти

#КонецЕсли
