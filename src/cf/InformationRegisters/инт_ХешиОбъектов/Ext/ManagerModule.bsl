////////////////////////////////////////////////////////////////////////////////
// инт_ХешиОбъектов
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаписатьХэшОбъекта(ИсходныеДанные, ПотокДанных, Отказ = Ложь) Экспорт
	
		Хеш = ПолучитьХешОбъектаПоПотоку(ИсходныеДанные, ПотокДанных);
		
		Если Не ЗначениеЗаполнено(Хеш) Тогда
			// чет не так с получением хеша... от греха подальше ничего не делаем, но в отказ не падаем, потому что лучше зарегистрировать, чем нет.
			Возврат;
		КонецЕсли;
		
		Если НЕ ДанныеИзменились(ИсходныеДанные, ПотокДанных, Хеш) Тогда
			// Данные с последнего раза не поменялись. Ничего не записываем - и возвращаем отказ.
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		// с прошлого раза данные поменялись, Обновим хеш и 
		Запись = РегистрыСведений.инт_ХешиОбъектов.СоздатьМенеджерЗаписи();
		Запись.ИсходныеДанные = ИсходныеДанные;
		Запись.ПотокДанных = ПотокДанных;
		Запись.Хеш = Хеш;
		Запись.Записать(Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеИзменились(ИсходныеДанные, ПотокДанных, Хеш)
	
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инт_ХешиОбъектов.ИсходныеДанные КАК ИсходныеДанные
	               |ИЗ
	               |	РегистрСведений.инт_ХешиОбъектов КАК инт_ХешиОбъектов
	               |ГДЕ
	               |	инт_ХешиОбъектов.ИсходныеДанные = &ИсходныеДанные
	               |	И инт_ХешиОбъектов.ПотокДанных = &ПотокДанных
	               |	И инт_ХешиОбъектов.Хеш = &Хеш";
	Запрос.УстановитьПараметр("ИсходныеДанные",ИсходныеДанные);
	Запрос.УстановитьПараметр("ПотокДанных",ПотокДанных);
	Запрос.УстановитьПараметр("Хеш", Хеш);
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПолучитьХешОбъектаПоПотоку(ИсходныеДанные, ПотокДанных)
	ХешСтрокой = "";
	Если НЕ ЗначениеЗаполнено(ПотокДанных.ОтслеживаемыеРеквизиты) Тогда
		// Если, ну почему-то оно не заполнено - просто говорим, что это не дубль.
		Возврат ХешСтрокой;
	КонецЕсли;
	ДеревоОтслеживаемыхРеквизитов = ЗначениеизСтрокиВнутр(ПотокДанных.ОтслеживаемыеРеквизиты);
	Попытка
		Хеширование=Новый ХешированиеДанных(ХешФункция.SHA1);
		Хеширование.Добавить(ПолучитьСсылкуСтрокой(ИсходныеДанные, ДеревоОтслеживаемыхРеквизитов));
		ХешСтрокой = Строка(Хеширование.ХешСумма);
	Исключение
	    СообщениеОбОшибке = СтрШаблон("При поптыке вычислить хеш объекта <%1> по потоку <%2> произошла ошибка!
		|
		|Информация об ошибке: %3", ИсходныеДанные, ПотокДанных, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации("ПодсистемаИнтеграции.ОчередьИсходящихСообщений.ХэшированиеОбъекта", УровеньЖурналаРегистрации.Ошибка,,,СообщениеОбОшибке);
		Возврат ХешСтрокой;
	КонецПопытки;
	
	Возврат ХешСтрокой;
КонецФункции

Функция ПолучитьСсылкуСтрокой(Ссылка, ДеревоОтслеживаемыхРеквизитов)
	СтрокаПоля = ОбойтиУзелДерева(ДеревоОтслеживаемыхРеквизитов.Строки);
	Если НЕ ЗначениеЗаполнено(СтрокаПоля)  Тогда
		ВызватьИсключение "В дереве отслеживаемых реквизитов нет ни одного отслеживаемого реквизита!";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = СтрШаблон("Выбрать %1 из %2 Где Ссылка=&Ссылка", СтрокаПоля, Ссылка.Метаданные().ПолноеИмя());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ЗначениеВСтрокуВнутр(Запрос.Выполнить().Выгрузить());
	Возврат ЗначениеВСтрокуВнутр(Запрос.Выполнить().Выгрузить());
КонецФункции

Функция ОбойтиУзелДерева(Строки)
	СтрокаРезультат = "";
	Для Каждого Строка Из Строки Цикл
		Если Строка.ОтслеживатьИзменения = 0 Тогда
			// Этот элемент не отслеживается.
			Продолжить;
		ИначеЕсли Строка.Родитель = Неопределено Тогда
			// Это родительский объект. Просто отправим собираться дальше
			СтрокаРезультат = ОбойтиУзелДерева(Строка.Строки);
		ИначеЕсли Строка.Имя = "Реквизиты" Или Строка.Имя = "СтандартныеРеквизиты" Тогда
			СтрокаРеквизитов = ОбойтиУзелДерева(Строка.Строки);
			СтрокаРезультат = СтрокаРезультат+?(СтрокаРезультат = "", "", ",")+СтрокаРеквизитов;
		ИначеЕсли Строка.Имя = "ТабличныеЧасти" Тогда
			Для Каждого СтрокаТабЧасть Из Строка.Строки Цикл
				РезультатПоСтрокеТЧ = ОбойтиУзелДерева(СтрокаТабЧасть.Строки);
				СтрокаРезультат = СтрокаРезультат+?(СтрокаРезультат = "", "", ",")+СтрШаблон("%1.(%2)",СтрокаТабЧасть.Имя, РезультатПоСтрокеТЧ);
			КонецЦикла;
		Иначе
			СтрокаРезультат = СтрокаРезультат+?(СтрокаРезультат = "", "", ",")+Строка.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрокаРезультат;
КонецФункции

#КонецОбласти

#КонецЕсли
